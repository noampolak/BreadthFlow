[tool.poetry]
name = "breadthflow"
version = "0.1.0"
description = "Real-time market breadth analysis system using PySpark, Kafka, and Delta Lake"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [
    {include = "ingestion"},
    {include = "features"},
    {include = "model"},
    {include = "cli"},
    {include = "data_pipeline"},
    {include = "fastapi_app"},
    {include = "seldon"},
]
keywords = ["trading", "signals", "pyspark", "kafka", "delta-lake", "elasticsearch"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.9"
# Core Data Processing
pyspark = "^3.5.1"
delta-spark = "^3.2.0"
pandas = "^2.2.2"
numpy = "^1.26.4"
pyarrow = "^16.1.0"

# Streaming & Messaging
kafka-python = "^2.0.2"
confluent-kafka = "^2.3.0"

# Storage & Object Store
minio = "^7.2.0"
elasticsearch = "^8.11.0"
boto3 = "^1.40.10"

# CLI & Configuration
click = "^8.1.7"
python-dotenv = "^1.0.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

# Web Framework
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.23"
psycopg2-binary = "^2.9.9"
alembic = "^1.12.1"
httpx = "^0.25.2"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
redis = "^5.0.1"
celery = "^5.3.4"

# Data Fetching
yfinance = "^0.2.28"
requests = "^2.31.0"
aiohttp = "^3.9.1"

# Technical Analysis
TA-Lib = "^0.4.28"

# Date/Time Handling
python-dateutil = "^2.8.2"
pytz = "^2024.1"

# JSON & Serialization
orjson = "^3.9.10"

# Logging & Monitoring
structlog = "^23.2.0"
scipy = "<1.12"

# System Monitoring & Configuration
psutil = "^5.9.0"
pyyaml = "^6.0.1"

# Machine Learning dependencies moved to optional groups
# See [tool.poetry.group.ml.dependencies] below

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
httpx = "^0.25.2"

# Code Quality
black = "^23.12.0"
flake8 = "^6.1.0"
isort = "^5.13.0"
mypy = "^1.8.0"

# Documentation
sphinx = "^7.2.0"
sphinx-rtd-theme = "^2.0.0"

# Development Tools
pre-commit = "^3.6.0"
jupyter = "^1.0.0"
ipython = "^8.18.0"

# ML dependencies moved to requirements-ci.txt for faster CI builds
# Install with: pip install -r requirements-ci.txt

[tool.poetry.scripts]
bf = "cli.bf:cli"

[tool.poetry.urls]
"Homepage" = "https://github.com/yourusername/breadthflow"
"Repository" = "https://github.com/yourusername/breadthflow"
"Bug Tracker" = "https://github.com/yourusername/breadthflow/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 127
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv/",
    "venv/",
    "env/",
    ".eggs/",
    "*.egg",
    "build/",
    "dist/",
    ".mypy_cache/",
    ".pytest_cache/",
    ".tox/",
    "node_modules/",
    "frontend/node_modules/",
    "frontend/build/"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
